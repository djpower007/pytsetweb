name: learn-github-action
run-name: ${{ github.actor }} is learning Github Actions
on:  
 workflow_dispatch: 
jobs: 
  check-bats-version: 
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: 
          node-version: "14"
      - run: npm install -g bats
      - run: bats -v
  run-env:
    runs-on: ubuntu-latest
    defaults:
      run:    
        working-directory: ./
    steps:
      - name: set env 
        env:
          myNull: ${{ null }}
          myBoolean: ${{ false }}
          myIntegerNumber: ${{ 711 }}
          myFloatNumber: ${{ -9.2 }}
          myHexNumber: ${{ 0xff }}
          myExponentialNumber: ${{ -2.99e-2 }}
          myString: Mona the Octocat
          myStringInBraces: ${{ 'It''s open source!' }}
        run: |
          echo "$myNull" && echo "$myBoolean" 
          echo "$myNull" 
          echo "$myBoolean" 
          echo "$myIntegerNumber" 
          echo "$myFloatNumber" 
          echo "$myHexNumber" 
          echo "$myExponentialNumber" 
          echo "$myString" 
          echo "$myStringInBraces"     
  run-scripts:
    runs-on: ubuntu-latest
    defaults:
      run:    
        working-directory: ./
    steps:
      - name: checkout the repository to the runner
        uses: actions/checkout@v3
      - name: write a script
        run: echo -e '#!/bin/bash\npwd' >> testpwd.sh
      - name: privage
        run: chmod 777 ./testpwd.sh
      - name: run the script
        run: |
          ./testpwd.sh
          echo  "$myNull" && echo "$myBoolean" 
          echo "$" 
          echo "$myBoolean" 
          echo "$myIntegerNumber" 
          echo "$myFloatNumber" 
          echo "$myHexNumber" 
          echo "$myExponentialNumber" 
          echo "$myString" 
          echo "$myStringInBraces" 
  run-functions:
    runs-on: ubuntu-latest
    steps: 
      - name: functions devops
        uses: actions/checkout@v3
      - name: test functions
        run:  |
              contains('Hello World','ello')
              contains("This is a string","this is a")
              contains("This is a string","This a")
              contains(github.event.issue.labels.*.name, 'bug')
              startsWith('Hello world', 'He')
              endsWith('Hello world', 'He')
              format('Hello {0} {1} {2}', 'Mona', 'the', 'Octocat')
              format('{{Hello {0} {1} {2}!}}', 'Mona', 'the', 'Octocat')
              join(github.event.issue.labels.*.name, '**')
              toJSON("json string")
              toJSON(run-functions)
              toJSON( run-env )
  matrix-set:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: echo "matrix={\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}" >> $GITHUB_OUTPUT
  matrix-out:
    needs: matrix-set
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.matrix-set.outputs.matrix) }}
    steps:
      - run: build
        

#      - name: run the script
#        run: ./my-other-script.sh
     